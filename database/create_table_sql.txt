SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

DROP SCHEMA IF EXISTS `mydb` ;
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`CLUB`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`CLUB` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`CLUB` (
  `CLUB_ID` INT NOT NULL AUTO_INCREMENT COMMENT '클럽아이디' ,
  `CLUB_NM` VARCHAR(100) NOT NULL COMMENT '클럽명' ,
  `CLUB_GB_CD` VARCHAR(6) NULL COMMENT '클럽구분코드: 중앙동아리, 과동아리' ,
  `CLUB_AT_CD` VARCHAR(6) NULL COMMENT '동아리 속성코드 : 학술/ 운동' ,
  `CLUB_CNT` INT NULL COMMENT '회원수' ,
  `CLUB_AIM` VARCHAR(255) NULL COMMENT '설립목적' ,
  `CLUB_ACTIVE` VARCHAR(255) NULL COMMENT '클럽활동' ,
  `CLUB_ROOM` VARCHAR(100) NULL COMMENT '동아리방' ,
  `OPEN_DT` VARCHAR(8) NULL COMMENT '개설일자' ,
  `INTRO_CONT` VARCHAR(255) NULL COMMENT '동아리소개' ,
  `INTRO_FILE_NM` VARCHAR(45) NULL COMMENT '동아리소개 이미지파일' ,
  `INTRO_FILE_PATH` VARCHAR(45) NULL COMMENT '동아리소개 파일경로' ,
  `INTRO_SAVE_FILE_NM` VARCHAR(45) NULL COMMENT '동아리소개 저장파일명' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  `PREFER` INT NULL COMMENT '즐겨찾기 수' ,
  PRIMARY KEY (`CLUB_ID`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`STUDENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`STUDENT` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`STUDENT` (
  `STUDENT_ID` VARCHAR(8) NOT NULL COMMENT '학생 아이디' ,
  `PASSWORD` VARCHAR(50) NULL COMMENT '비밀번호' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  `NEWS` VARCHAR(255) NULL COMMENT '쪽지 메시지\\nEX)  CHAOS에 가입이 거절되었습니다.' ,
  `STATE` VARCHAR(255) NULL COMMENT '쪽지에서 동아리 번호' ,
  PRIMARY KEY (`STUDENT_ID`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`CLUB_MEMBER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`CLUB_MEMBER` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`CLUB_MEMBER` (
  `CLUB_ID` INT NOT NULL COMMENT '클럽아이디' ,
  `STUDENT_ID` VARCHAR(8) NOT NULL COMMENT '학생아이디' ,
  `NM` VARCHAR(100) NULL COMMENT '학생이름' ,
  `MAJOR` VARCHAR(50) NULL COMMENT '전공' ,
  `GRADE` VARCHAR(1) NULL COMMENT '학년' ,
  `GENDER_CD` VARCHAR(6) NULL COMMENT '성별' ,
  `STAFF_CD` VARCHAR(6) NULL COMMENT '임원코드(회장, 부회장,총무)' ,
  `PHONE_NO` VARCHAR(13) NULL COMMENT '핸드폰 번호' ,
  `POST_NO` VARCHAR(6) NULL COMMENT '우편번호' ,
  `ADDRESS` VARCHAR(50) NULL COMMENT '주소' ,
  `PER_INFO_AGG_YN` VARCHAR(50) NULL COMMENT '개인정보 동의 여부' ,
  `EMAIL` VARCHAR(45) NULL COMMENT '이메일' ,
  `JOIN_DT` VARCHAR(8) NULL COMMENT '가입날짜' ,
  `BIRTH_DT` VARCHAR(8) NULL COMMENT '생년월일' ,
  `ING_CD` VARCHAR(6) NULL COMMENT '재학코드 : 재학 퇴학 휴학 ' ,
  `JOIN_CD` VARCHAR(6) NULL COMMENT '신청,승인 관리' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  `PLAN` VARCHAR(500) NULL COMMENT '가입후 계획' ,
  `HOPE` VARCHAR(500) NULL COMMENT '바라는점' ,
  PRIMARY KEY (`CLUB_ID`, `STUDENT_ID`) ,
  INDEX `fk_CLUB_MEMBER_CLUB_idx` (`CLUB_ID` ASC) ,
  INDEX `fk_CLUB_MEMBER_STUDENT1_idx` (`STUDENT_ID` ASC) ,
  CONSTRAINT `fk_CLUB_MEMBER_CLUB`
    FOREIGN KEY (`CLUB_ID` )
    REFERENCES `mydb`.`CLUB` (`CLUB_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CLUB_MEMBER_STUDENT1`
    FOREIGN KEY (`STUDENT_ID` )
    REFERENCES `mydb`.`STUDENT` (`STUDENT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`CLUB_PROF`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`CLUB_PROF` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`CLUB_PROF` (
  `CLUB_ID` INT NOT NULL COMMENT '클럽아이디' ,
  `PROF_NO` VARCHAR(45) NOT NULL COMMENT '지도교수 아이디' ,
  `PROF_NM` VARCHAR(45) NULL COMMENT '지도교수 이름' ,
  `PROG_GB_CD` VARCHAR(6) NULL COMMENT '지도교수 구분 : 정/부' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  PRIMARY KEY (`CLUB_ID`, `PROF_NO`) ,
  INDEX `fk_CLUB_PROF_CLUB1_idx` (`CLUB_ID` ASC) ,
  CONSTRAINT `fk_CLUB_PROF_CLUB1`
    FOREIGN KEY (`CLUB_ID` )
    REFERENCES `mydb`.`CLUB` (`CLUB_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`BOARD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`BOARD` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`BOARD` (
  `BOARD_NO` INT NOT NULL COMMENT '보드번호(자동증가)' ,
  `CLUB_ID` INT NOT NULL COMMENT '클럽아이디' ,
  `BOARD_CD` VARCHAR(6) NULL COMMENT '게시판 구분 : 공지, 자유,  사진, 일정' ,
  `TITLE` VARCHAR(45) NULL COMMENT '제목' ,
  `CONTENTS` VARCHAR(255) NULL COMMENT '내용' ,
  `OPEN_CNT` INT NULL COMMENT '조회수' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  `BBSAVAILABLE` INT NULL COMMENT '삭제 상태\\n0 : 삭제된 상태\\n1 : 삭제 안된 상태' ,
  PRIMARY KEY (`BOARD_NO`, `CLUB_ID`) ,
  INDEX `fk_BOARD_CLUB1_idx` (`CLUB_ID` ASC) ,
  CONSTRAINT `fk_BOARD_CLUB1`
    FOREIGN KEY (`CLUB_ID` )
    REFERENCES `mydb`.`CLUB` (`CLUB_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`BOARD_FILE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`BOARD_FILE` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`BOARD_FILE` (
  `CLUB_ID` INT NOT NULL COMMENT '클럽 아이디' ,
  `BOARD_NO` INT NOT NULL COMMENT '보드 번호' ,
  `FILE_NO` INT NOT NULL COMMENT '파일 번호' ,
  `FILE_NM` VARCHAR(100) NULL COMMENT '파일명' ,
  `FILE_SAVE_NM` VARCHAR(45) NULL COMMENT '파일저장명' ,
  `FILE_PATH` VARCHAR(255) NULL COMMENT '파일경로' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  PRIMARY KEY (`CLUB_ID`, `BOARD_NO`, `FILE_NO`) ,
  INDEX `fk_BOARD_FILE_BOARD1_idx` (`CLUB_ID` ASC, `BOARD_NO` ASC, `FILE_NO` ASC) ,
  CONSTRAINT `fk_BOARD_FILE_BOARD1`
    FOREIGN KEY (`BOARD_NO` , `FILE_NO` )
    REFERENCES `mydb`.`BOARD` (`BOARD_NO` , `CLUB_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ITEM`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ITEM` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`ITEM` (
  `CLUB_ID` INT NOT NULL COMMENT '클럽아이디' ,
  `SEQ_NO` INT NOT NULL COMMENT '일련번호' ,
  `ITEM_NM` VARCHAR(100) NULL COMMENT '아이템명' ,
  `ITEM_CONT` VARCHAR(200) NULL COMMENT '아이템 설명' ,
  `TOT_CNT` INT NULL COMMENT '전체 개수' ,
  `RENT_CNT` INT NULL COMMENT '빌려간 개수' ,
  `REST_CNT` INT NULL COMMENT '남은 갯수' ,
  `RENT_STUDENT_ID` VARCHAR(8) NULL COMMENT '빌려간 학생 아이디' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  PRIMARY KEY (`CLUB_ID`, `SEQ_NO`) ,
  INDEX `fk_ITEM_CLUB1_idx` (`CLUB_ID` ASC) ,
  CONSTRAINT `fk_ITEM_CLUB1`
    FOREIGN KEY (`CLUB_ID` )
    REFERENCES `mydb`.`CLUB` (`CLUB_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`RESTAURANT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`RESTAURANT` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`RESTAURANT` (
  `SEQ_NO` INT NOT NULL COMMENT '일련번호' ,
  `REST_NM` VARCHAR(100) NULL COMMENT '식당번호' ,
  `REST_PHONE_NO` VARCHAR(13) NULL COMMENT '식당 전화번호' ,
  `POST` VARCHAR(6) NULL COMMENT '우편번호' ,
  `ADDRESS` VARCHAR(200) NULL COMMENT '주소' ,
  `LATITUTE` VARCHAR(20) NULL COMMENT '위도' ,
  `LONGITUDE` VARCHAR(20) NULL COMMENT '경도' ,
  `USE_YN` VARCHAR(1) NULL COMMENT '사용여부' ,
  `CLICK_CNT` INT UNSIGNED NULL COMMENT '클릭횟수' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  PRIMARY KEY (`SEQ_NO`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`DAE_CD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`DAE_CD` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`DAE_CD` (
  `DAE_CD` VARCHAR(3) NOT NULL COMMENT '대코드' ,
  `DAE_NM` VARCHAR(45) NULL COMMENT '대코드명' ,
  `USE_YN` VARCHAR(1) NULL COMMENT '사용여부' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  PRIMARY KEY (`DAE_CD`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SO_CD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`SO_CD` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`SO_CD` (
  `SO_CD` VARCHAR(6) NOT NULL COMMENT '소코드' ,
  `DAE_CD` VARCHAR(3) NOT NULL COMMENT '대코드' ,
  `SO_NM` VARCHAR(100) NULL COMMENT '소코드 명' ,
  `USE_YN` VARCHAR(1) NULL COMMENT '사용여부' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  PRIMARY KEY (`SO_CD`, `DAE_CD`) ,
  INDEX `fk_SO_CD_DAE_CD1_idx` (`DAE_CD` ASC) ,
  CONSTRAINT `fk_SO_CD_DAE_CD1`
    FOREIGN KEY (`DAE_CD` )
    REFERENCES `mydb`.`DAE_CD` (`DAE_CD` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`BUDGET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`BUDGET` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`BUDGET` (
  `CLUB_ID` INT NOT NULL ,
  `SEQ_NO` INT NOT NULL ,
  `IO_GB_CD` VARCHAR(6) NULL COMMENT '수입지출 구분코드' ,
  `USE_DT` VARCHAR(8) NULL COMMENT '사용일' ,
  `CONTENTS` VARCHAR(255) NULL COMMENT '내용' ,
  `PRICE` INT NULL COMMENT '금액' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  PRIMARY KEY (`CLUB_ID`, `SEQ_NO`) ,
  INDEX `fk_BUDGET_CLUB1_idx` (`CLUB_ID` ASC) ,
  CONSTRAINT `fk_BUDGET_CLUB1`
    FOREIGN KEY (`CLUB_ID` )
    REFERENCES `mydb`.`CLUB` (`CLUB_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`COMMENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`COMMENT` ;

CREATE  TABLE IF NOT EXISTS `mydb`.`COMMENT` (
  `SEQ_NO` INT NOT NULL COMMENT '식당일련번호' ,
  `CSEQ_NO` INT NOT NULL COMMENT '댓글 시퀀스 번호' ,
  `CONTENTS` VARCHAR(255) NULL COMMENT '댓글 내용' ,
  `INPUT_ID` VARCHAR(45) NULL ,
  `INPUT_IP` VARCHAR(45) NULL ,
  `INPUT_DATE` DATETIME NULL ,
  `UPDATE_ID` VARCHAR(45) NULL ,
  `UPDATE_IP` VARCHAR(45) NULL ,
  `UPDATE_DATE` DATETIME NULL ,
  PRIMARY KEY (`SEQ_NO`, `CSEQ_NO`) ,
  INDEX `fk_COMMENT_RESTAURANT1_idx` (`SEQ_NO` ASC) ,
  CONSTRAINT `fk_COMMENT_RESTAURANT1`
    FOREIGN KEY (`SEQ_NO` )
    REFERENCES `mydb`.`RESTAURANT` (`SEQ_NO` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
